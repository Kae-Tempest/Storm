[tool.poetry]
name = "storm"
version = "0.1.0"
description = ""
authors = ["Kae-Tempest <katsuhiko.tempest@gmail.com>"]
packages = [{ include = "storm_api" }]

[tool.poetry.dependencies]
python = ">=3.13"
django-ninja = "*"
python-dotenv = ">=1.0.1,<2.0.0"
psycopg-binary = ">=3.2.4,<4.0.0"
django-ninja-jwt = ">=5.3.5,<6.0.0"
pillow = ">=11.1.0,<12.0.0"
psycopg = "^3.2.4"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.7"
django-stubs = "^5.1.3"
mypy-extensions = "^1.0.0"
mypy = "^1.15.0"

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true

[tool.ruff.lint]
ignore = ["E501", "F401", "D100"]
extend-select = ["DJ", "I", "UP", "TCH"]
exclude = ["migrations", ".venv", "__pycache__"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["storm_api"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# Mode strict qui active automatiquement plusieurs vérifications strictes
strict = true

# Options supplémentaires non couvertes par strict
warn_unreachable = true  # Avertit pour le code inaccessible

# Performance
incremental = true  # Active le mode incrémental pour de meilleures performances

# Gestion des imports
ignore_missing_imports = true  # Ignore les erreurs de modules externes sans stubs

# Affichage des erreurs
pretty = true  # Formattage plus lisible des erreurs
show_error_codes = true  # Affiche les codes d'erreur
show_column_numbers = true  # Affiche les numéros de colonne dans les erreurs

# Vous pouvez ajouter des plugins ici si nécessaire
#plugins = ['mypy_django_plugin.main']
#
#[tool.django-stubs]
#django_settings_module = "storm_api.core.settings"
#strict_settings = true
